ELF Header:
  Magic:   7f 45 4c 46 01 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF32
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              EXEC (Executable file)
  Machine:                           RISC-V
  Version:                           0x1
  Entry point address:               0x0
  Start of program headers:          52 (bytes into file)
  Start of section headers:          478880 (bytes into file)
  Flags:                             0x0
  Size of this header:               52 (bytes)
  Size of program headers:           32 (bytes)
  Number of program headers:         3
  Size of section headers:           40 (bytes)
  Number of section headers:         31
  Section header string table index: 30

Section Headers:
  [Nr] Name              Type            Addr     Off    Size   ES Flg Lk Inf Al
  [ 0]                   NULL            00000000 000000 000000 00      0   0  0
  [ 1] vector            PROGBITS        00000000 000094 000024 00  AX  0   0  4
  [ 2] rom_start         NOBITS          00000024 0000b8 00000c 00  WA  0   0  1
  [ 3] exceptions        PROGBITS        00000030 0000c0 0002c0 00  AX  0   0  4
  [ 4] text              PROGBITS        000002f0 000380 00cee4 00  AX  0   0  4
  [ 5] initlevel         PROGBITS        0000d1d4 00d264 000048 00   A  0   0  4
  [ 6] devices           PROGBITS        0000d21c 00d2ac 000060 00   A  0   0  4
  [ 7] sw_isr_table      PROGBITS        0000d27c 00d30c 000200 00  WA  0   0  4
  [ 8] device_handles    PROGBITS        0000d47c 00d50c 000018 00   A  0   0  2
  [ 9] rodata            PROGBITS        0000d498 00d528 000b44 00   A  0   0  8
  [10] bss               NOBITS          0000dfe0 00e06c 00052c 00  WA  0   0  8
  [11] noinit            NOBITS          0000e510 00e06c 502aa0 00  WA  0   0 16
  [12] datas             PROGBITS        00510fb0 00e06c 0001fc 00  WA  0   0  4
  [13] device_states     PROGBITS        005111ac 00e268 000010 00  WA  0   0  4
  [14] k_heap_area       PROGBITS        005111bc 00e278 000014 00  WA  0   0  4
  [15] k_mutex_area      PROGBITS        005111d0 00e28c 000064 00  WA  0   0  4
  [16] k_msgq_area       PROGBITS        00511234 00e2f0 000050 00  WA  0   0  4
  [17] k_sem_area        PROGBITS        00511284 00e340 000010 00  WA  0   0  4
  [18] .comment          PROGBITS        00000000 00e350 00002e 01  MS  0   0  1
  [19] .debug_aranges    PROGBITS        00000000 00e380 000e10 00      0   0  8
  [20] .debug_info       PROGBITS        00000000 00f190 026ea9 00      0   0  1
  [21] .debug_abbrev     PROGBITS        00000000 036039 0071ad 00      0   0  1
  [22] .debug_line       PROGBITS        00000000 03d1e6 018bc2 00      0   0  1
  [23] .debug_frame      PROGBITS        00000000 055da8 003808 00      0   0  4
  [24] .debug_str        PROGBITS        00000000 0595b0 004b12 01  MS  0   0  1
  [25] .debug_loc        PROGBITS        00000000 05e0c2 00cb52 00      0   0  1
  [26] .debug_ranges     PROGBITS        00000000 06ac18 0037f0 00      0   0  8
  [27] .riscv.attributes RISCV_ATTRIBUTE 00000000 06e408 00002a 00      0   0  1
  [28] .symtab           SYMTAB          00000000 06e434 003390 10     29 258  4
  [29] .strtab           STRTAB          00000000 0717c4 003599 00      0   0  1
  [30] .shstrtab         STRTAB          00000000 074d5d 000141 00      0   0  1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  p (processor specific)

Program Headers:
  Type           Offset   VirtAddr   PhysAddr   FileSiz MemSiz  Flg Align
  LOAD           0x000094 0x00000000 0x00000000 0x00024 0x00030 RWE 0x4
  LOAD           0x0000c0 0x00000030 0x00000030 0x0dfac 0x510f80 RWE 0x10
  LOAD           0x00e06c 0x00510fb0 0x00510fb0 0x002e4 0x002e4 RW  0x4

 Section to Segment mapping:
  Segment Sections...
   00     vector rom_start 
   01     exceptions text initlevel devices sw_isr_table device_handles rodata bss noinit 
   02     datas device_states k_heap_area k_mutex_area k_msgq_area k_sem_area 
